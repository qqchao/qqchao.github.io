<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ubuntu系统中启动Hexo遇到ENOSPC错误以及如何解决</title>
    <url>/2019/12/09/hexo/hexo-linux-server/</url>
    <content><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><blockquote>
<p>在ubuntu系统中启动Hexo服务，Terminal报错：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error: watch &#x2F;home&#x2F;qqchao&#x2F;code&#x2F;my-gitlab&#x2F;my-blog&#x2F;source&#x2F;_posts ENOSPC</span></pre></td></tr><tr><td class="code"><pre><span class="line">    at FSWatcher.start (fs.js:1402:19)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    at Object.fs.watch (fs.js:1428:11)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    at createFsWatchInstance (&#x2F;home&#x2F;qqchao&#x2F;code&#x2F;my-gitlab&#x2F;my-blog&#x2F;node_modules&#x2F;chokidar&#x2F;lib&#x2F;nodefs-handler.js:118:15)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    at setFsWatchListener (&#x2F;home&#x2F;qqchao&#x2F;code&#x2F;my-gitlab&#x2F;my-blog&#x2F;node_modules&#x2F;chokidar&#x2F;lib&#x2F;nodefs-handler.js:165:15)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    at NodeFsHandler._watchWithNodeFs (&#x2F;home&#x2F;qqchao&#x2F;code&#x2F;my-gitlab&#x2F;my-blog&#x2F;node_modules&#x2F;chokidar&#x2F;lib&#x2F;nodefs-handler.js:330:14)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    at NodeFsHandler._handleDir (&#x2F;home&#x2F;qqchao&#x2F;code&#x2F;my-gitlab&#x2F;my-blog&#x2F;node_modules&#x2F;chokidar&#x2F;lib&#x2F;nodefs-handler.js:551:19)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    at &lt;anonymous&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    at process._tickCallback (internal&#x2F;process&#x2F;next_tick.js:182:7)</span></pre></td></tr></table></figure>
<figure class="highlight plain"><figcaption><span>```Error No more hard-disk space available```（没有更多的磁盘空间可以使用）   </span></figcaption><table><tr><td class="code"><pre><span class="line">经度娘的一番分析，确诊原因为，&#96;&#96;&#96;nodemon&#96;&#96;&#96;监听文件过多（超过系统允许监听的默认值）导致出现异常。</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">#### 解决方法</span></pre></td></tr><tr><td class="code"><pre><span class="line">###### 方法一： 提高系统允许监听文件数</span></pre></td></tr></table></figure>
<p>echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">###### 方法二：过滤掉不必要的监听的文件</span></pre></td></tr><tr><td class="code"><pre><span class="line">在项目的根目录，创建 nodemon.json 文件，并设置过滤内容。</span></pre></td></tr></table></figure>
<p>// nodemon.json</p>
<p>{<br>  “ignore”: [<br>    “<em>.test.js”,<br>    “dist/</em>“<br>  ]<br>}</p>
<pre><code>需要注意的是，nodemon 会默认忽略掉以下类型的文件， ```.git```, ```node_modules```, ```bower_components```, ```.nyc_output```, ```coverage```，``` .sass-cache```。因此，不必将这些类型的文件放入到配置中。</code></pre>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Node.js</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo + 云服务器 = 我的字留地</title>
    <url>/2019/12/08/hexo/hexo-init/</url>
    <content><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><blockquote>
<p>网络上有各式各样Hexo博客搭建教程，在这里就不再做详细描述，只是简单记述一下本站的大体结构。<br>本站是基于<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>博客框架+<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next</a>主题搭建，最初部署于GitHub的page服务，现改用为阿里云服务器。    </p>
</blockquote>
<h4 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1.前期准备"></a>1.前期准备</h4><ul>
<li>本地<a href="git-scm.com">git</a>环境</li>
<li>本地<a href="nodejs.org">Node.js</a>环境 </li>
<li>git服务(可以使用<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>用来代码托管，或者使用其他代码服务)<br>作为代码托管，或者拥有其他代码服务的账号)</li>
<li>云服务器 + 域名（也可使用GitHub等服务的page服务）</li>
</ul>
<h4 id="2-Hexo博客服务"><a href="#2-Hexo博客服务" class="headerlink" title="2.Hexo博客服务"></a>2.Hexo博客服务</h4><ul>
<li>可参考网络中各种hexo教程，再此不做过多重复搬运工作。<blockquote>
<p>（感谢<a href="http://www.zhaojun.im/categories/Hexo/" target="_blank" rel="noopener">赵俊的博客</a>在本站搭建过程中提供的支持，以及简书上各路技术博主支持）</p>
</blockquote>
</li>
</ul>
<h4 id="3-我的博客"><a href="#3-我的博客" class="headerlink" title="3.我的博客"></a>3.我的博客</h4><p>本站使用阿里云服务托管，在阿里云服务器中搭建两个git服务，启动nginx服务器做访问转发。</p>
<p><a href="https://www.liaoxuefeng.com/wiki/896043488029600/899998870925664" target="_blank" rel="noopener">git服务搭建教程</a></p>
<ul>
<li><p>1) git server1: Hexo-blog管理，用于支持多端更新</p>
</li>
<li><p>2) git server2: 站点配置文件(_config.yml)中deplay配置，用于部署</p>
</li>
<li><p>3) 服务器中创建blog目录,定时更新server    </p>
<ul>
<li><p>创建blog文件夹</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;local</span></pre></td></tr><tr><td class="code"><pre><span class="line">mkdir blog</span></pre></td></tr><tr><td class="code"><pre><span class="line">cd blog</span></pre></td></tr></table></figure></li>
<li><p>克隆blog部署文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone git.server2</span></pre></td></tr></table></figure></li>
<li><p>设置<a href="https://www.runoob.com/w3cnote/linux-crontab-tasks.html" target="_blank" rel="noopener">Linux定时任务</a>,在/usr/local/blog路径创建脚本文件update.sh,定时同步资源    </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd $&#123;server2&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">git pull</span></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>4) 修改nginx配置root指向/usr/local/blog/${server2}</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>excel之vlookup——列查询匹配</title>
    <url>/2019/01/06/excel/excel-vlookup/</url>
    <content><![CDATA[<p>VLOOKUP函数是Excel中的一个纵向查找函数，它与LOOKUP函数和HLOOKUP函数属于一类函数，在工作中都有广泛应用，例如可以用来核对数据，多个表格之间快速导入数据等函数功能。功能是按列查找，最终返回该列所需查询列序所对应的值；与之对应的HLOOKUP是按行查找的。        ————度娘百科</p>
<h2 id="方法参数分析"><a href="#方法参数分析" class="headerlink" title="方法参数分析"></a>方法参数分析</h2><p>VLOOKUP方法需要输入四个参数</p>
<ul>
<li>value1：查询检索字段/数据源（字符串或者引用位置）</li>
<li>value2：查询区域（格式一 (B:D) 查询B列到D列；  格式二 (B2:D5) B2到D5之间的长方形区域）第一列为查询区域，后几列为value3使用，value3取值须在查询区域内，如value3填入3，则value2必填B:D/B:E/B:F…不可填B:B/B:C</li>
<li>value3：填入的数据取查询区域的第几列</li>
<li>value4：是否模糊匹配（true：模糊匹配；false：完全匹配）</li>
</ul>
<h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><p>假定有如下两张表，需要将表2的年龄信息对应填入表1：</p>
<p><img src="/.top//empty.png" alt="初始文件"><br><img src="/.top//age.png" alt="初始文件"></p>
<h2 id="使用vlookup查询获取数据"><a href="#使用vlookup查询获取数据" class="headerlink" title="使用vlookup查询获取数据"></a>使用vlookup查询获取数据</h2><p><img src="/.top//function.png" alt="初始文件"></p>
<p>为了方便方法填写，将查询表的数据复制到目标文件的右侧，填写VLOOKUP方法，并使用下拉填充填满整列，查询结果即显示出来</p>
<h3 id="白话翻译："><a href="#白话翻译：" class="headerlink" title="白话翻译："></a>白话翻译：</h3><p>将上图中的函数<code>VLOOKUP(A2,F:G,2,FALSE)</code>进行功能描述就是：从F列中找到与A2（value1）中数据信息完全一致（value4：false）的数据行（找到F3，定位第3行），并将该行对应G列（value3：第2列）的数据信息（G3）填入当前位置（C2）</p>
<h2 id="清除公式及辅助数据"><a href="#清除公式及辅助数据" class="headerlink" title="清除公式及辅助数据"></a>清除公式及辅助数据</h2><ol>
<li>清除公式：<br>查询完成后，点击列表头原地复制粘贴，粘贴时使用选择性粘贴只粘贴数值</li>
<li>清除右侧查询域数据</li>
</ol>
<p><img src="/.top//result.png" alt="初始文件"></p>
]]></content>
      <categories>
        <category>excel</category>
      </categories>
      <tags>
        <tag>excel</tag>
      </tags>
  </entry>
  <entry>
    <title>Element-UI的上传组件在IE10浏览器中遇到的问题解决</title>
    <url>/2019/01/04/vue/vue-ie10-upload/</url>
    <content><![CDATA[<h2 id="1-问题"><a href="#1-问题" class="headerlink" title="1.问题"></a>1.问题</h2><p>上传一个文件A.file后，当第二次选择同一个文件（A.file）,页面无反应。组件所有的钩子方法都不触发，选择不同文件则可以继续上传。</p>
<p>测试了几个浏览器，firefox/chrome/ie11都不存在这样的问题，只有ie10有</p>
<h2 id="2-解决"><a href="#2-解决" class="headerlink" title="2.解决"></a>2.解决</h2><p>各种尝试，最后翻到element-ui的<a href="https://github.com/ElemeFE/element/issues/5822" target="_blank" rel="noopener" title="https://github.com/ElemeFE/element/issues/5822">github.issue</a>里面找到解决方案：</p>
<p>在组件外套一层form，上传完成后重置form数据</p>
<p><code>this.$refs.uploaderForm.reset()</code></p>
<p>因为原代码中使用了<el-form>，也尝试使用el-form.resetFields方法以及el-upload.clearFiles等方式，结果都无效。</el-form></p>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>Element-UI</tag>
        <tag>问题日志</tag>
      </tags>
  </entry>
  <entry>
    <title>hello world</title>
    <url>/2019/01/03/hello-world/</url>
    <content><![CDATA[<h3 id="小站开张了！"><a href="#小站开张了！" class="headerlink" title="小站开张了！"></a>小站开张了！</h3><h4 id="热烈庆祝我的自嗨小站于几天前正式上线"><a href="#热烈庆祝我的自嗨小站于几天前正式上线" class="headerlink" title="热烈庆祝我的自嗨小站于几天前正式上线!!"></a>热烈庆祝我的自嗨小站于几天前正式上线!!</h4><hr>
]]></content>
      <categories>
        <category>闲言碎语</category>
      </categories>
      <tags>
        <tag>闲言碎语</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2018/12/31/hexo-hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
